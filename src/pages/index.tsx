import Head from "next/head"
import Image from "next/image"

interface Props {
	data: NewsAPIData
	datetime: Date
}

export default function Home(props: Props) {
	return (
		<>
			<Head>
				<title>Next App Showcase</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="flex bg-gradient-to-r from-indigo-500 to-purple-500 h-screen text-white">
				<div className="mx-auto my-60 max-w-5xl">
					<h1 className="text-8xl before:block before:absolute before:-inset-1 before:-skew-y-2 before:bg-pink-500 relative inline-block">
						<span className="relative text-white">Hi!</span>
					</h1>
					<h2 className="text-5xl text-center">
						This is a{" "}
						<span className="before:block before:absolute before:-inset-1 before:-skew-y-1 before:bg-pink-500 relative inline-block">
							<span className="relative text-white">Staticly Generated Page!</span>
						</span>
					</h2>
					<h2>or SGP</h2>
					<p>{props.data.articles[0].author}</p>
					{/* 
						If you run this app in development mode, every time you refresh the page, getStaticProps() will run on the server. 
						If you run the app in production mode, getStaticProps() will run at build time. It's the same for the API we fetched -
						it's only called once at build time.
					*/}
					<p>{props.datetime.toString()}</p>

					{props.data.articles.map((article, index) => (
						<NewsPost article={article} key={index} />
					))}
				</div>
			</main>
		</>
	)
}

function NewsPost({ article }: { article: Article }) {
	return (
		<>
			<div className="overflow-hidden max-w-xs aspect-video bg-red-400 cursor-pointer rounded-xl relative group inline-block mx-1">
				<div className="rounded-xl z-50 opacity-0 group-hover:opacity-100 transition duration-300 ease-in-out cursor-pointer absolute from-black/80 to-transparent bg-gradient-to-t inset-x-0 -bottom-2 pt-30 text-white flex items-end">
					<div>
						<div className="transform-gpu p-4 space-y-3 text-xl group-hover:opacity-100 group-hover:translate-y-0 translate-y-4 pb-10 transition duration-300 ease-in-out">
							<div className="font-bold">{article.title}</div>

							<div className="opacity-60 text-sm">{article.description}</div>
						</div>
					</div>
				</div>
				<Image alt="" width="1920" height="1080" className="object-cover w-full aspect-square group-hover:scale-110 transition duration-300 ease-in-out" src={article.urlToImage} />
			</div>
		</>
	)
}

interface Article {
	source: {
		id: string
		name: string
	}
	author: string
	title: string
	description: string
	url: string
	urlToImage: string
	publishedAt: string
	content: string
}

interface NewsAPIData {
	status: string
	totalResults: number
	articles: Article[]
}

//This function is called at build time on server-side.
//It won't be called on client-side, and won't be included in the JS bundle for the browser.
//So you can write code such as direct database queries without them being sent to browsers.
export async function getStaticProps() {
	const res = await fetch(`https://saurav.tech/NewsAPI/top-headlines/category/health/in.json`)
	const data: NewsAPIData = await res.json()
	data.articles = data.articles.slice(0, 6)

	const datetime = JSON.parse(JSON.stringify(new Date()))

	return {
		props: {
			data,
			datetime,
		},
	}
	//Essentially, getStaticProps allows you to tell Next.js:
	//“Hey, this page has some data dependencies — so when you
	//pre-render this page at build time, make sure to resolve
	//them first!”
}
